library(tidyverse)
senate_votes <- read_csv("senate_votes.csv")
View(senate_votes)
vars <- c(21, 22, 23, 25, 26, 27, 28, 29)
year_votes <- senate_votes %>%
filter(vote == vars )
View(year_votes)
year_votes <- senate_votes %>%
filter(vote == vars ) %>%
group_by(year) %>%
summarise(count = n())
year_votes <- senate_votes %>%
filter(vote == vars ) %>%
group_by(year) %>%
summarise(count = n())
year_votes <- senate_votes %>%
filter(vote == vars ) %>%
group_by(year)
year_votes <- senate_votes %>%
group_by(year) %>%
filter(vote == vars ) %>%
summarise(count = n())
warnings()
View(year_votes)
year_votes <- senate_votes %>%
filter(vote == vars )
amendment_year <- year_votes %>%
group_by(year) %>%
summarise(count = n())
View(amendment_year)
test_year_votes <- senate_votes %>%
filter(vote == vars ) %>%
group_by(year) %>%
summarise(count = n())
test_year_votes <- senate_votes %>%
group_by(year) %>%
filter(vote == vars ) %>%
summarise(count = n())
View(test_year_votes)
#now let's group and count them by year
amendment_year2 <- year_votes %>%
group_by(year) %>%
summarise(count = n())
View(amendment_year)
View(amendment_year2)
#now let's group and count them by year
amendment_year <- year_votes %>%
group_by(year) %>%
summarise(count = n())
library(tidyverse)
#this data is located here: https://www.ou.edu/carlalbertcenter/research/pipc-votes
#Thanks to Sarah Binder for tipping me off to it, It's a collection of ALL Senate votes back to 1969!
#before reading in, I highlighted all columns and then deselected the ones with data before deleting the whitespace, to make sure there were no extra columns when read into R
senate_votes <- read_csv("senate_votes.csv")
#21 through 29 (except for 24 — those are motions to table amendments) — you’re going to catch all the amendment votes (in the “vote” column)
#then collapse by year — aka — group and count
#Amendment votes by year - let's look at the total number of amendment votes by year which requires us to filter out the votes we want, group them by year, and then count the number of amendment votes.
#So using the codebook provided with the data (https://www.ou.edu/content/dam/carlalbertcenter/documents/pipc-senate-codebook.pdf) We're going to want to focus on a couple of rows. 1 the "vote row" that describes what kind of vote it is. And, within that, we're going to focus on codes 21 - Straight Amendments (includes en bloc & amendments in the nature of a substitute), 22 Amendments to Amendments, 23 Substitute (to an amendment), 25 Amendment to Amendment to Substitute, 26 Perfecting Amendment, 27 Amendment to Substitute, 28 Perfecting Amendment to Substitute, 29 Suspension of Rules to Amend Bill But NOT 24 Motion to Table Amendment
vars <- c(21, 22, 23, 25, 26, 27, 28, 29)
#first let's filter out just our amendment votes
year_votes <- senate_votes %>%
filter(vote == vars )
#now let's group and count them by year
amendment_year <- year_votes %>%
group_by(year) %>%
summarise(count = n())
#first let's filter out just our amendment votes
year_votes <- senate_votes %>%
filter(vote == vars )
year_votes <- senate_votes %>%
filter(vote == (21 | 22 | 23 | 25 | 26 | 27 | 28 | 29) )
senate_votes <- read_csv("senate_votes.csv")
problems()
problems(...)
problems(senate_votes)
View(senate_votes)
question
senate_votes <- read_csv("senate_votes.csv", col_character("question"))
"
senate_votes <- read_csv("senate_votes.csv", col_character(question))
senate_votes <- read_csv("senate_votes.csv", col_types = list( question = col_character())
senate_votes <- read_csv("senate_votes.csv", col_types = list( question = col_character()))
senate_votes <- read_csv("senate_votes.csv", col_types = list( question = col_character()))
senate_votes <- read_csv("senate_votes.csv", col_types = list( question = col_character(), url = col_character()))
senate_votes <- read_csv("senate_votes.csv", col_types = list( question = col_character(), url = col_character(), amendment = col_character()))
senate_votes <- read_csv("senate_votes.csv", col_types = list( question = col_character(), url = col_character(), amendment = col_character(), bill_title = col_character()))
senate_votes <- read_csv("senate_votes.csv", col_types = list( question = col_character(), url = col_character(), amendment = col_character(), bill_title = col_character(), rnotvoting = col_character, billnum1 = col_character()))
senate_votes <- read_csv("senate_votes.csv", col_types = list( question = col_character(), url = col_character(), amendment = col_character(), bill_title = col_character(), rnotvoting = col_character, billnum1 = col_character()))
senate_votes <- read_csv("senate_votes.csv", col_types = list( question = col_character(), url = col_character(), amendment = col_character(), bill_title = col_character(), rnotvoting = col_character, billnum1 = col_character()))
library(tidyverse)
#this data is located here: https://www.ou.edu/carlalbertcenter/research/pipc-votes
#Thanks to Sarah Binder for tipping me off to it, It's a collection of ALL Senate votes back to 1969!
#before reading in, I highlighted all columns and then deselected the ones with data before deleting the whitespace, to make sure there were no extra columns when read into R
#tried to go through and skip the columns i don't need and force the other columns to the type I'd like them to be.
senate_votes <- read_csv("senate_votes.csv", col_types = list( cong = col_integer(), year = col_integer(), vote = col_integer() ,question = col_character(), url = col_character(), amendment = col_character(),bill_title = col_character(), rnotvoting =  col_number(), billnum1 = col_skip(), dnotvoting = col_number(), amendment2 = col_character(), amendment3 = col_character(), dpresent =col_skip(), rpresent = col_skip(), iyeas = col_skip(), inays = col_skip(), inotvoting = col_skip(), ipresent = col_skip(), vpvote = col_skip()))
#, , rnotvoting = col_character, billnum1 = col_character()
#21 through 29 (except for 24 — those are motions to table amendments) — you’re going to catch all the amendment votes (in the “vote” column)
#then collapse by year — aka — group and count
#Amendment votes by year - let's look at the total number of amendment votes by year which requires us to filter out the votes we want, group them by year, and then count the number of amendment votes.
#So using the codebook provided with the data (https://www.ou.edu/content/dam/carlalbertcenter/documents/pipc-senate-codebook.pdf) We're going to want to focus on a couple of rows. 1 the "vote row" that describes what kind of vote it is. And, within that, we're going to focus on codes 21 - Straight Amendments (includes en bloc & amendments in the nature of a substitute), 22 Amendments to Amendments, 23 Substitute (to an amendment), 25 Amendment to Amendment to Substitute, 26 Perfecting Amendment, 27 Amendment to Substitute, 28 Perfecting Amendment to Substitute, 29 Suspension of Rules to Amend Bill But NOT 24 Motion to Table Amendment
#first let's filter out just our amendment votes https://blog.exploratory.io/filter-data-with-dplyr-76cf5f1a258e
amendment_votes <- senate_votes %>%
filter(vote %in% c(21, 22, 23, 25, 26, 27, 28, 29))
#now let's group and count the number of amendment votes by year
amendment_cong <- amendment_votes %>%
group_by(cong) %>%
summarize (count = n())
# Basic scatter plot // Binder's was by year
ggplot(amendment_cong, aes(x=cong, y=count)) +
geom_point() +
stat_smooth()
# let's look at bills that got multiple amendment votes by congress
bill_vote <- amendment_votes %>%
group_by(bill1, cong) %>%
summarize(count = n())
#and we can drop any bills that got less than 5 votes
multi_bill_vote <- bill_vote %>%
filter(count > 5) %>%
group_by(cong) %>%
summarize(multi_count = n())
# Basic scatter plot looking at the number of bills that got more than 5 amendment votes
ggplot(multi_bill_vote, aes(x=cong, y=multi_count)) +
geom_point() +
stat_smooth()
#plot, by year, the number of bills that got more than 5 votes
ggplot(data = multi_bill_vote, aes(x=cong, y=multi_count)) +
geom_bar(stat="identity")
View(bill_vote)
multi_bill_vote <- bill_vote %>%
# filter(count > 5) %>%
group_by(cong) %>%
summarize(multi_count = n())
ggplot(multi_bill_vote, aes(x=cong, y=multi_count)) +
geom_point() +
stat_smooth()
View(senate_votes)
`%!in%` <- Negate(`%in%`)
no_amendment_votes <- senate_votes %>%
filter(vote %!in% c(21, 22, 23, 25, 26, 27, 28, 29)) %>%
filter(vote %in% c(11,15))
View(no_amendment_votes)
no_amendment_cong <- no_amendment_votes %>%
group_by(cong) %>%
summarize (count = n())
View(no_amendment_votes)
View(no_amendment_cong)
View(amendment_cong)
View(amendment_votes)
all_bill_votes <- senate_votes %>%
filter(vote %in% c(11,15))
#now let's group and count the number of amendment votes by year
no_amendment_cong <- no_amendment_votes %>%
group_by(cong, bill1) %>%
summarize (count_all_bills = n())
#tried to go through and skip the columns i don't need and force the other columns to the type I'd like them to be.
senate_votes <- read_csv("senate_votes_1_7_2021.csv", col_types = list( cong = col_integer(), year = col_integer(), vote = col_integer() ,question = col_character(), url = col_character(), amendment = col_character(),bill_title = col_character(), rnotvoting =  col_number(), billnum1 = col_skip(), dnotvoting = col_number(), amendment2 = col_character(), amendment3 = col_character(), dpresent =col_skip(), rpresent = col_skip(), iyeas = col_skip(), inays = col_skip(), inotvoting = col_skip(), ipresent = col_skip(), vpvote = col_skip()))
#, , rnotvoting = col_character, billnum1 = col_character()
#21 through 29 (except for 24 — those are motions to table amendments) — you’re going to catch all the amendment votes (in the “vote” column)
#then collapse by year — aka — group and count
#Amendment votes by year - let's look at the total number of amendment votes by year which requires us to filter out the votes we want, group them by year, and then count the number of amendment votes.
#So using the codebook provided with the data (https://www.ou.edu/content/dam/carlalbertcenter/documents/pipc-senate-codebook.pdf) We're going to want to focus on a couple of rows. 1 the "vote row" that describes what kind of vote it is. And, within that, we're going to focus on codes 21 - Straight Amendments (includes en bloc & amendments in the nature of a substitute), 22 Amendments to Amendments, 23 Substitute (to an amendment), 25 Amendment to Amendment to Substitute, 26 Perfecting Amendment, 27 Amendment to Substitute, 28 Perfecting Amendment to Substitute, 29 Suspension of Rules to Amend Bill But NOT 24 Motion to Table Amendment
#first let's filter out just our amendment votes https://blog.exploratory.io/filter-data-with-dplyr-76cf5f1a258e
amendment_votes <- senate_votes %>%
filter(vote %in% c(21, 22, 23, 25, 26, 27, 28, 29))
#now let's group and count the number of amendment votes by congress
amendment_total<- amendment_votes %>%
group_by(cong) %>%
summarize (count_total_amend_votes = n())
# let's also group and count the number of bills that got amendment votes, and group by congress
amendment_bill <- amendment_votes %>%
group_by(cong, bill1) %>%
summarize (count_bills_amend_votes = n())
#brought up by Ryan Kelly- let's also look at the total number of bills that got votes on final passage.
all_bill_votes <- senate_votes %>%
filter(vote %in% c(11,15))
#now let's group and count the number of amendment votes by year
no_amendment_cong <- all_bill_votes %>%
group_by(cong, bill1) %>%
summarize (count_all_bills = n())
View(amendment_cong)
library(tidyverse)
#this data is located here: https://www.ou.edu/carlalbertcenter/research/pipc-votes
#Thanks to Sarah Binder for tipping me off to it, It's a collection of ALL Senate votes back to 1969!
#before reading in, I highlighted all columns and then deselected the ones with data before deleting the whitespace, to make sure there were no extra columns when read into R
#tried to go through and skip the columns i don't need and force the other columns to the type I'd like them to be.
senate_votes <- read_csv("senate_votes_1_7_2021.csv", col_types = list( cong = col_integer(), year = col_integer(), vote = col_integer() ,question = col_character(), url = col_character(), amendment = col_character(),bill_title = col_character(), rnotvoting =  col_number(), billnum1 = col_skip(), dnotvoting = col_number(), amendment2 = col_character(), amendment3 = col_character(), dpresent =col_skip(), rpresent = col_skip(), iyeas = col_skip(), inays = col_skip(), inotvoting = col_skip(), ipresent = col_skip(), vpvote = col_skip()))
#, , rnotvoting = col_character, billnum1 = col_character()
#21 through 29 (except for 24 — those are motions to table amendments) — you’re going to catch all the amendment votes (in the “vote” column)
#then collapse by year — aka — group and count
#Amendment votes by year - let's look at the total number of amendment votes by year which requires us to filter out the votes we want, group them by year, and then count the number of amendment votes.
#So using the codebook provided with the data (https://www.ou.edu/content/dam/carlalbertcenter/documents/pipc-senate-codebook.pdf) We're going to want to focus on a couple of rows. 1 the "vote row" that describes what kind of vote it is. And, within that, we're going to focus on codes 21 - Straight Amendments (includes en bloc & amendments in the nature of a substitute), 22 Amendments to Amendments, 23 Substitute (to an amendment), 25 Amendment to Amendment to Substitute, 26 Perfecting Amendment, 27 Amendment to Substitute, 28 Perfecting Amendment to Substitute, 29 Suspension of Rules to Amend Bill But NOT 24 Motion to Table Amendment
#first let's filter out just our amendment votes https://blog.exploratory.io/filter-data-with-dplyr-76cf5f1a258e
amendment_votes <- senate_votes %>%
filter(vote %in% c(21, 22, 23, 25, 26, 27, 28, 29))
#now let's group and count the number of amendment votes by congress
amendment_total<- amendment_votes %>%
group_by(cong) %>%
summarize (count_total_amend_votes = n())
# let's also group and count the number of bills that got amendment votes, and group by congress
amendment_bill <- amendment_votes %>%
group_by(cong, bill1) %>%
summarize (count_bills_amend_votes = n())
#brought up by Ryan Kelly- let's also look at the total number of bills that got votes on final passage.
all_bill_votes <- senate_votes %>%
filter(vote %in% c(11,15))
#now let's group and count the number of amendment votes by year
no_amendment_cong <- all_bill_votes %>%
group_by(cong, bill1) %>%
summarize (count_all_bills = n())
View(amendment_bill)
amendment_bill <- amendment_votes %>%
group_by(bill1, cong) %>%
summarize (count_bills_amend_votes = n())
View(amendment_bill)
View(amendment_total)
View(amendment_votes)
View(no_amendment_cong)
View(amendment_votes)
# Basic scatter plot // Binder's was by year
ggplot(amendment_total, aes(x=cong, y=count_total_amend_votes)) +
geom_point() +
stat_smooth()
ggplot(amendment_total, aes(x=cong, y=count_total_amend_votes)) +
geom_point() +
stat_smooth()
# Basic scatter plot // Binder's was by year
ggplot(amendment_total, aes(x=cong, y=count_total_amend_votes)) +
geom_point() +
stat_smooth()
# let's look at bills that got multiple amendment votes by congress
bill_vote <- amendment_votes %>%
group_by(bill1, cong) %>%
summarize(count = n())
View(bill_vote)
#and we can drop any bills that got less than 5 votes
multi_bill_vote <- amendment_bill %>%
filter(count > 5) %>%
group_by(cong) %>%
summarize(multi_count = n())
multi_bill_vote <- amendment_bill %>%
filter(count_bills_amend_votes > 5) %>%
group_by(cong) %>%
summarize(multi_count = n())
View(multi_bill_vote)
#We should also go ahead and do a group/count of bills that got amendment votes in each congress
amendment_bill <- amendment_votes %>%
count(cong)
# let's also group and count the number of bills that got amendment votes, and group by congress
amendment_bill <- amendment_votes %>%
group_by(bill1, cong) %>%
summarize (count_bills_amend_votes = n())
#We should also go ahead and do a group/count of bills that got amendment votes in each congress
amendment_cong <- amendment_bill %>%
group_by(cong) %>%
summarize (count_amend_bills_by_congress = n())
View(amendment_bill)
View(amendment_cong)
#and what if we dropped drop any bills that got less than 5 votes
multi_bill_vote <- amendment_bill %>%
filter(count_bills_amend_votes > 5) %>%
group_by(cong) %>%
summarize(multi_count = n())
View(multi_bill_vote)
# Basic scatter plot looking at the number of bills that got more than 5 amendment votes
ggplot(multi_bill_vote, aes(x=cong, y=multi_count)) +
geom_point() +
stat_smooth()
library(tidyverse)
#this data is located here: https://www.ou.edu/carlalbertcenter/research/pipc-votes
#Thanks to Sarah Binder for tipping me off to it, It's a collection of ALL Senate votes back to 1969!
#before reading in, I highlighted all columns and then deselected the ones with data before deleting the whitespace, to make sure there were no extra columns when read into R
#tried to go through and skip the columns i don't need and force the other columns to the type I'd like them to be.
senate_votes <- read_csv("senate_votes_1_7_2021.csv", col_types = list( cong = col_integer(), year = col_integer(), vote = col_integer() ,question = col_character(), url = col_character(), amendment = col_character(),bill_title = col_character(), rnotvoting =  col_number(), billnum1 = col_skip(), dnotvoting = col_number(), amendment2 = col_character(), amendment3 = col_character(), dpresent =col_skip(), rpresent = col_skip(), iyeas = col_skip(), inays = col_skip(), inotvoting = col_skip(), ipresent = col_skip(), vpvote = col_skip()))
#, , rnotvoting = col_character, billnum1 = col_character()
#21 through 29 (except for 24 — those are motions to table amendments) — you’re going to catch all the amendment votes (in the “vote” column)
#then collapse by year — aka — group and count
#Amendment votes by year - let's look at the total number of amendment votes by year which requires us to filter out the votes we want, group them by year, and then count the number of amendment votes.
#So using the codebook provided with the data (https://www.ou.edu/content/dam/carlalbertcenter/documents/pipc-senate-codebook.pdf) We're going to want to focus on a couple of rows. 1 the "vote row" that describes what kind of vote it is. And, within that, we're going to focus on codes 21 - Straight Amendments (includes en bloc & amendments in the nature of a substitute), 22 Amendments to Amendments, 23 Substitute (to an amendment), 25 Amendment to Amendment to Substitute, 26 Perfecting Amendment, 27 Amendment to Substitute, 28 Perfecting Amendment to Substitute, 29 Suspension of Rules to Amend Bill But NOT 24 Motion to Table Amendment
#first let's filter out just our amendment votes https://blog.exploratory.io/filter-data-with-dplyr-76cf5f1a258e
amendment_votes <- senate_votes %>%
filter(vote %in% c(21, 22, 23, 25, 26, 27, 28, 29))
#now let's group and count the number of amendment votes by congress
amendment_total<- amendment_votes %>%
group_by(cong) %>%
summarize (count_total_amend_votes = n())
#brought up by Ryan Kelly- let's also look at the total number of bills that got votes on final passage.
all_bill_votes <- senate_votes %>%
filter(vote %in% c(11,15))
#now let's group and count the number of amendment votes by year
no_amendment_cong <- all_bill_votes %>%
group_by(cong, bill1) %>%
summarize (count_all_bills = n())
# Basic scatter plot // Binder's was by year
ggplot(amendment_total, aes(x=cong, y=count_total_amend_votes)) +
geom_point() +
stat_smooth()
# let's also group and count the number of bills that got amendment votes, and group by congress
amendment_bill <- amendment_votes %>%
group_by(bill1, cong) %>%
summarize (count_bills_amend_votes = n())
#We should also go ahead and do a group/count of bills that got amendment votes in each congress
amendment_cong <- amendment_bill %>%
group_by(cong) %>%
summarize (count_amend_bills_by_congress = n())
#and what if we dropped drop any bills that got less than 5 votes
multi_bill_vote <- amendment_bill %>%
filter(count_bills_amend_votes > 5) %>%
group_by(cong) %>%
summarize(multi_count = n())
View(multi_bill_vote)
View(amendment_total)
View(amendment_cong)
View(no_amendment_cong)
joined <- list(multi_bill_vote, amendment_cong, amendment_total) %>%
reduce(left_join, by = "cong")
View(joined)
View(amendment_bill)
#and what if we dropped drop any bills that got less than 5 votes
multi_bill_vote <- amendment_bill %>%
filter(count_bills_amend_votes > 5) %>%
group_by(cong) %>%
summarize(more_than_five_amend_votes = n())
joined <- list(multi_bill_vote, amendment_cong, amendment_total) %>%
reduce(left_join, by = "cong")
all_bill_votes <- senate_votes %>%
filter(vote %in% c(11,15)) %>%
group_by(cong, bill1)
View(all_bill_votes)
all_bill_votes <- senate_votes %>%
filter(vote %in% c(11,15)) %>%
group_by(cong, bill1) %>%
count(cong,bill1)
View(all_bill_votes)
View(senate_votes)
all_bill_votes <- senate_votes %>%
filter(vote %in% c(11,15))
#now let's group and count the number of bills that got final passage votes
bill_passage_by_cong <- all_bill_votes %>%
group_by(cong, bill1) %>%
summarize (count_all_bills = n())
#now let's group and count the number of bills that got final passage votes
bill_passage_by_cong <- all_bill_votes %>%
group_by(cong, bill1) %>%
summarize (count_all_bills = n())
View(bill_passage_by_cong)
bill_passage <- all_bill_votes %>%
group_by(cong, bill1) %>%
summarize (count_all_bills = n())
View(bill_passage)
bill_passage_by_cong <- all_bill_votes %>%
group_by(cong) %>%
summarize (count_all_bills = n())
write_csv(joined, "findings_on_amendment_votes.csv")
View(amendment_bill)
View(bill_passage_by_cong)
View(joined)
joined <- list(multi_bill_vote, amendment_cong, amendment_total,bill_passage_by_cong) %>%
reduce(left_join, by = "cong")
View(joined)
joined_and_matched <- joined %>%
mutate( percent_bills_w_amend_votes = (count_amend_bills_by_congress / count_all_bills))
View(joined_and_matched)
amendment_bill <- amendment_votes %>%
group_by(bill1, cong) %>%
summarize (count_bills_amend_votes = n())
View(amendment_bill)
amendment_cong <- amendment_bill %>%
group_by(cong) %>%
summarize (count_amend_bills_by_congress = n())
View(amendment_cong)
View(bill_passage)
View(senate_votes)
View(amendment_bill)
View(all_bill_votes)
#tried to go through and skip the columns i don't need and force the other columns to the type I'd like them to be.
senate_votes <- read_csv("senate_votes_new.csv", col_types = list( cong = col_integer(), year = col_integer(), vote = col_integer() ,question = col_character(), url = col_character(), amendment = col_character(),bill_title = col_character(), rnotvoting =  col_number(), billnum1 = col_skip(), dnotvoting = col_number(), amendment2 = col_character(), amendment3 = col_character(), dpresent =col_skip(), rpresent = col_skip(), iyeas = col_skip(), inays = col_skip(), inotvoting = col_skip(), ipresent = col_skip(), vpvote = col_skip()))
#, , rnotvoting = col_character, billnum1 = col_character()
#21 through 29 (except for 24 — those are motions to table amendments) — you’re going to catch all the amendment votes (in the “vote” column)
#then collapse by year — aka — group and count
#Amendment votes by year - let's look at the total number of amendment votes by year which requires us to filter out the votes we want, group them by year, and then count the number of amendment votes.
#So using the codebook provided with the data (https://www.ou.edu/content/dam/carlalbertcenter/documents/pipc-senate-codebook.pdf) We're going to want to focus on a couple of rows. 1 the "vote row" that describes what kind of vote it is. And, within that, we're going to focus on codes 21 - Straight Amendments (includes en bloc & amendments in the nature of a substitute), 22 Amendments to Amendments, 23 Substitute (to an amendment), 25 Amendment to Amendment to Substitute, 26 Perfecting Amendment, 27 Amendment to Substitute, 28 Perfecting Amendment to Substitute, 29 Suspension of Rules to Amend Bill But NOT 24 Motion to Table Amendment
#first let's filter out just our amendment votes https://blog.exploratory.io/filter-data-with-dplyr-76cf5f1a258e
amendment_votes <- senate_votes %>%
filter(vote %in% c(21, 22, 23, 25, 26, 27, 28, 29))
#now let's group and count the number of amendment votes by congress
amendment_total<- amendment_votes %>%
group_by(cong) %>%
summarize (count_total_amend_votes = n())
`%notin%` <- Negate(`%in%`)
all_bill_votes <- senate_votes %>%
filter(vote %notin% c(24))
bill_passage <- all_bill_votes %>%
group_by(cong, bill1) %>%
summarize (count_all_bills = n())
all_bill_votes <- senate_votes %>%
filter(vote %notin% c(24))
#now let's group and count the number of total votes
bill_passage <- all_bill_votes %>%
group_by(cong) %>%
summarize (count_all_bills = n())
View(bill_passage)
bill_passage_by_cong <- all_bill_votes %>%
group_by(cong) %>%
summarize (count_all_bills = n())
View(bill_passage_by_cong)
bill_passage_by_cong <- senate_votes %>%
group_by(cong) %>%
summarize (count_all_bills = n())
View(bill_passage_by_cong)
# let's also group and count the number of bills that got amendment votes, and group by congress
amendment_bill <- amendment_votes %>%
group_by(bill1, cong) %>%
summarize (count_bills_amend_votes = n())
View(amendment_bill)
View(amendment_total)
#We should also go ahead and do a group/count of bills that got amendment votes in each congress
amendment_cong <- amendment_bill %>%
group_by(cong) %>%
summarize (count_amend_bills_by_congress = n())
View(amendment_cong)
#and what if we dropped drop any bills that got less than 5 votes
multi_bill_vote <- amendment_bill %>%
filter(count_bills_amend_votes > 5) %>%
group_by(cong) %>%
summarize(more_than_five_amend_votes = n())
#count_all_bills is the total bills that got a vote on final passage.
joined <- list(multi_bill_vote, amendment_cong, amendment_total,bill_passage_by_cong) %>%
reduce(left_join, by = "cong")
View(joined)
View(bill_passage)
View(bill_passage)
#count_all_bills is the total bills that got a vote on final passage.
joined <- list(multi_bill_vote, amendment_cong, amendment_total, bill_passage, bill_passage_by_cong) %>%
reduce(left_join, by = "cong")
View(joined)
all_bill_votes <- senate_votes %>%
filter(vote %notin% c(24))
#now let's group and count the number of total votes
bill_passage <- all_bill_votes %>%
group_by(cong) %>%
summarize (count_votes_no_table = n())
#now I just want the group by congress
bill_passage_by_cong <- senate_votes %>%
group_by(cong) %>%
summarize (count_all_votes = n())
#count_all_bills is the total bills that got a vote on final passage.
joined <- list(multi_bill_vote, amendment_cong, amendment_total, bill_passage, bill_passage_by_cong) %>%
reduce(left_join, by = "cong")
View(bill_passage)
write_csv(joined, "findings_on_amendment_votes.csv")
